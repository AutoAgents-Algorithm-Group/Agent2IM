# Docker Compose 配置 - Agent2IM 完整部署
# 
# 使用方法:
#   启动所有服务:    docker-compose up -d
#   仅启动 API:      docker-compose up -d api
#   仅启动调度器:    docker-compose up -d scheduler
#   查看日志:        docker-compose logs -f
#   停止服务:        docker-compose down

name: agent2im

services:
  # AI即时通讯集成服务 - API服务（接收飞书事件回调）
  api:
    build:
      context: ../
      dockerfile: docker/Dockerfile
      args:
        SERVICE_TYPE: api
    container_name: agent2im-api
    ports:
      - "9000:9000"  # API服务端口，用于接收飞书审批回调
    environment:
      - SERVICE_TYPE=api
      - PYTHONPATH=/app/backend
      - PYTHONUNBUFFERED=1
      - TZ=Asia/Shanghai
    volumes:
      # 挂载配置文件（必需）
      - ../backend/src/config/labor_hour.yaml:/app/backend/src/config/labor_hour.yaml:ro
      - ../backend/src/config/approval.yaml:/app/backend/src/config/approval.yaml:ro
      - ../backend/src/config/news.yaml:/app/backend/src/config/news.yaml:ro
      # 挂载日志目录（可选）
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - agent2im-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 定时任务调度器
  scheduler:
    build:
      context: ../
      dockerfile: docker/Dockerfile
      args:
        SERVICE_TYPE: scheduler
    container_name: agent2im-scheduler
    environment:
      - SERVICE_TYPE=scheduler
      - PYTHONPATH=/app/backend
      - PYTHONUNBUFFERED=1
      - TZ=Asia/Shanghai
    volumes:
      # 挂载配置文件（必需）
      - ../backend/src/config/labor_hour.yaml:/app/backend/src/config/labor_hour.yaml:ro
      - ../backend/src/config/approval.yaml:/app/backend/src/config/approval.yaml:ro
      - ../backend/src/config/news.yaml:/app/backend/src/config/news.yaml:ro
      # 挂载日志目录（可选）
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - agent2im-network
    healthcheck:
      test: ["CMD", "pgrep", "-f", "unified_scheduler"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  agent2im-network:
    driver: bridge

volumes:
  agent2im_data:
    driver: local
